services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"  # HTTP only
    volumes:
      - ./nginx-local.conf:/etc/nginx/nginx.conf  # Use local NGINX config
    depends_on:
      - wsapi
      - restapi
    networks:
      - app-network

  # Other services remain unchanged
  wsapi:
    container_name: wsapi
    build:
      context: .
      dockerfile: serverws.dockerfile
    expose:
      - "80" 
    environment:
      - CONFIG_PATH=/root/config/config.json
    depends_on:
      - redis
    networks:
      - app-network

  restapi:
    container_name: restapiworker
    build:
      context: .
      dockerfile: restapiworker.dockerfile
    expose:
      - "80" 
    networks:
      - app-network
    depends_on:
      - redis
      - postgres

  #loginworker:
  #  container_name: loginworker
  #  build:
  #    context: .
  #    dockerfile: loginworker.dockerfile
  #  expose:
  #    - "8081"  # Expose port 8081 internally
  #  networks:
  #    - app-network
  #  depends_on:
  #    - postgres

  #pstatusworker:
  #  container_name: pstatusworker
  #  build:
  #    context: .
  #    dockerfile: pstatusworker.dockerfile
  #  depends_on:
  #    - redis
  #  networks:
  #    - app-network

  roomworker:
    container_name: roomworker
    build:
      context: .
      dockerfile: roomworker.dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  broadcastworker:
    container_name: broadcastworker
    build:
      context: .
      dockerfile: broadcastworker.dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  gameworker-checkers:
    container_name: gameworker-checkers
    build:
      context: .
      dockerfile: gameworker.dockerfile
    environment:
      GAME_ENGINE: "BatalhaDasDamas"
    depends_on:
      - redis
    networks:
      - app-network
  
  gameworker-chess:
    container_name: gameworker-chess
    build:
      context: .
      dockerfile: gameworker.dockerfile
    environment:
      GAME_ENGINE: "BatalhaDoChess"
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: checkersdb
      POSTGRES_DB: checkers
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge