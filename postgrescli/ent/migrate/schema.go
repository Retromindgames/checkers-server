// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CurrenciesColumns holds the columns for the "currencies" table.
	CurrenciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "symbol", Type: field.TypeString},
		{Name: "thousands_separator", Type: field.TypeString},
		{Name: "units_separator", Type: field.TypeString},
		{Name: "symbol_position", Type: field.TypeString},
		{Name: "denominator", Type: field.TypeInt},
	}
	// CurrenciesTable holds the schema information for the "currencies" table.
	CurrenciesTable = &schema.Table{
		Name:       "currencies",
		Columns:    CurrenciesColumns,
		PrimaryKey: []*schema.Column{CurrenciesColumns[0]},
	}
	// CurrencyVersionsColumns holds the columns for the "currency_versions" table.
	CurrencyVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "min_bet", Type: field.TypeInt},
		{Name: "max_exp", Type: field.TypeInt},
		{Name: "denominator", Type: field.TypeInt},
		{Name: "currency_id", Type: field.TypeInt},
		{Name: "default_multiplier", Type: field.TypeInt},
		{Name: "deprecated", Type: field.TypeBool},
		{Name: "crash_bet_increment", Type: field.TypeInt},
		{Name: "slots_bet_multipliers", Type: field.TypeJSON},
		{Name: "currencie_currency_versions", Type: field.TypeInt, Nullable: true},
		{Name: "game_type_currency_versions", Type: field.TypeInt, Nullable: true},
	}
	// CurrencyVersionsTable holds the schema information for the "currency_versions" table.
	CurrencyVersionsTable = &schema.Table{
		Name:       "currency_versions",
		Columns:    CurrencyVersionsColumns,
		PrimaryKey: []*schema.Column{CurrencyVersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "currency_versions_currencies_currency_versions",
				Columns:    []*schema.Column{CurrencyVersionsColumns[10]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "currency_versions_game_types_currency_versions",
				Columns:    []*schema.Column{CurrencyVersionsColumns[11]},
				RefColumns: []*schema.Column{GameTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FeaturesColumns holds the columns for the "features" table.
	FeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString},
	}
	// FeaturesTable holds the schema information for the "features" table.
	FeaturesTable = &schema.Table{
		Name:       "features",
		Columns:    FeaturesColumns,
		PrimaryKey: []*schema.Column{FeaturesColumns[0]},
	}
	// GamesColumns holds the columns for the "games" table.
	GamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString},
		{Name: "trademark_name", Type: field.TypeString},
		{Name: "game_type_games", Type: field.TypeInt, Nullable: true},
		{Name: "serie_games", Type: field.TypeInt, Nullable: true},
		{Name: "studio_games", Type: field.TypeInt, Nullable: true},
	}
	// GamesTable holds the schema information for the "games" table.
	GamesTable = &schema.Table{
		Name:       "games",
		Columns:    GamesColumns,
		PrimaryKey: []*schema.Column{GamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "games_game_types_games",
				Columns:    []*schema.Column{GamesColumns[4]},
				RefColumns: []*schema.Column{GameTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "games_series_games",
				Columns:    []*schema.Column{GamesColumns[5]},
				RefColumns: []*schema.Column{SeriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "games_studios_games",
				Columns:    []*schema.Column{GamesColumns[6]},
				RefColumns: []*schema.Column{StudiosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GameConfigsColumns holds the columns for the "game_configs" table.
	GameConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_demo", Type: field.TypeBool},
		{Name: "can_tournament", Type: field.TypeBool},
		{Name: "can_free_bets", Type: field.TypeBool},
		{Name: "can_drop_and_wins", Type: field.TypeBool},
		{Name: "can_turbo", Type: field.TypeBool},
		{Name: "is_active", Type: field.TypeBool},
		{Name: "can_auto_bet", Type: field.TypeBool},
		{Name: "can_auto_cashout", Type: field.TypeBool},
		{Name: "can_ante_bet", Type: field.TypeBool},
		{Name: "can_home_button", Type: field.TypeBool},
		{Name: "currency_version_game_configs", Type: field.TypeInt, Nullable: true},
		{Name: "game_game_configs", Type: field.TypeInt, Nullable: true},
		{Name: "game_version_game_configs", Type: field.TypeInt, Nullable: true},
		{Name: "math_version_game_configs", Type: field.TypeInt, Nullable: true},
		{Name: "operator_game_configs", Type: field.TypeInt, Nullable: true},
	}
	// GameConfigsTable holds the schema information for the "game_configs" table.
	GameConfigsTable = &schema.Table{
		Name:       "game_configs",
		Columns:    GameConfigsColumns,
		PrimaryKey: []*schema.Column{GameConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_configs_currency_versions_game_configs",
				Columns:    []*schema.Column{GameConfigsColumns[11]},
				RefColumns: []*schema.Column{CurrencyVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_configs_games_game_configs",
				Columns:    []*schema.Column{GameConfigsColumns[12]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_configs_game_versions_game_configs",
				Columns:    []*schema.Column{GameConfigsColumns[13]},
				RefColumns: []*schema.Column{GameVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_configs_math_versions_game_configs",
				Columns:    []*schema.Column{GameConfigsColumns[14]},
				RefColumns: []*schema.Column{MathVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_configs_operators_game_configs",
				Columns:    []*schema.Column{GameConfigsColumns[15]},
				RefColumns: []*schema.Column{OperatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GameFeaturesColumns holds the columns for the "game_features" table.
	GameFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "feature_game_features", Type: field.TypeInt, Nullable: true},
		{Name: "game_game_features", Type: field.TypeInt, Nullable: true},
	}
	// GameFeaturesTable holds the schema information for the "game_features" table.
	GameFeaturesTable = &schema.Table{
		Name:       "game_features",
		Columns:    GameFeaturesColumns,
		PrimaryKey: []*schema.Column{GameFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_features_features_game_features",
				Columns:    []*schema.Column{GameFeaturesColumns[1]},
				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_features_games_game_features",
				Columns:    []*schema.Column{GameFeaturesColumns[2]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GameTypesColumns holds the columns for the "game_types" table.
	GameTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString},
		{Name: "external_type_id", Type: field.TypeString},
	}
	// GameTypesTable holds the schema information for the "game_types" table.
	GameTypesTable = &schema.Table{
		Name:       "game_types",
		Columns:    GameTypesColumns,
		PrimaryKey: []*schema.Column{GameTypesColumns[0]},
	}
	// GameVersionsColumns holds the columns for the "game_versions" table.
	GameVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString},
		{Name: "can_demo", Type: field.TypeBool},
		{Name: "can_tournament", Type: field.TypeBool},
		{Name: "can_free_bets", Type: field.TypeBool},
		{Name: "can_drop_and_wins", Type: field.TypeBool},
		{Name: "can_turbo", Type: field.TypeBool},
		{Name: "url_media_pack", Type: field.TypeString},
		{Name: "url_release_note", Type: field.TypeString},
		{Name: "deprecated", Type: field.TypeBool},
		{Name: "available_math_versions", Type: field.TypeJSON},
		{Name: "can_auto_bet", Type: field.TypeBool},
		{Name: "url_game_manual", Type: field.TypeString},
		{Name: "can_auto_cashout", Type: field.TypeBool},
		{Name: "can_buy_bonus", Type: field.TypeBool},
		{Name: "can_ante_bet", Type: field.TypeBool},
		{Name: "game_game_versions", Type: field.TypeInt, Nullable: true},
		{Name: "game_type_game_versions", Type: field.TypeInt, Nullable: true},
	}
	// GameVersionsTable holds the schema information for the "game_versions" table.
	GameVersionsTable = &schema.Table{
		Name:       "game_versions",
		Columns:    GameVersionsColumns,
		PrimaryKey: []*schema.Column{GameVersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_versions_games_game_versions",
				Columns:    []*schema.Column{GameVersionsColumns[16]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "game_versions_game_types_game_versions",
				Columns:    []*schema.Column{GameVersionsColumns[17]},
				RefColumns: []*schema.Column{GameTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MathVersionsColumns holds the columns for the "math_versions" table.
	MathVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
		{Name: "volatility", Type: field.TypeInt},
		{Name: "rtp", Type: field.TypeInt},
		{Name: "max_win", Type: field.TypeInt},
		{Name: "can_buy_bonus", Type: field.TypeBool},
		{Name: "url_release_note", Type: field.TypeString},
		{Name: "deprecated", Type: field.TypeBool},
		{Name: "can_ante_bet", Type: field.TypeBool},
	}
	// MathVersionsTable holds the schema information for the "math_versions" table.
	MathVersionsTable = &schema.Table{
		Name:       "math_versions",
		Columns:    MathVersionsColumns,
		PrimaryKey: []*schema.Column{MathVersionsColumns[0]},
	}
	// OperatorsColumns holds the columns for the "operators" table.
	OperatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "alias", Type: field.TypeString},
		{Name: "platform_operator", Type: field.TypeInt, Nullable: true},
	}
	// OperatorsTable holds the schema information for the "operators" table.
	OperatorsTable = &schema.Table{
		Name:       "operators",
		Columns:    OperatorsColumns,
		PrimaryKey: []*schema.Column{OperatorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "operators_platforms_Operator",
				Columns:    []*schema.Column{OperatorsColumns[5]},
				RefColumns: []*schema.Column{PlatformsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlatformsColumns holds the columns for the "platforms" table.
	PlatformsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "home_button_payload", Type: field.TypeString},
	}
	// PlatformsTable holds the schema information for the "platforms" table.
	PlatformsTable = &schema.Table{
		Name:       "platforms",
		Columns:    PlatformsColumns,
		PrimaryKey: []*schema.Column{PlatformsColumns[0]},
	}
	// SeriesColumns holds the columns for the "series" table.
	SeriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "external_id", Type: field.TypeString},
	}
	// SeriesTable holds the schema information for the "series" table.
	SeriesTable = &schema.Table{
		Name:       "series",
		Columns:    SeriesColumns,
		PrimaryKey: []*schema.Column{SeriesColumns[0]},
	}
	// SerieFeaturesColumns holds the columns for the "serie_features" table.
	SerieFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "feature_serie_features", Type: field.TypeInt, Nullable: true},
		{Name: "serie_serie_features", Type: field.TypeInt, Nullable: true},
	}
	// SerieFeaturesTable holds the schema information for the "serie_features" table.
	SerieFeaturesTable = &schema.Table{
		Name:       "serie_features",
		Columns:    SerieFeaturesColumns,
		PrimaryKey: []*schema.Column{SerieFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "serie_features_features_serie_features",
				Columns:    []*schema.Column{SerieFeaturesColumns[1]},
				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "serie_features_series_serie_features",
				Columns:    []*schema.Column{SerieFeaturesColumns[2]},
				RefColumns: []*schema.Column{SeriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "can_demo", Type: field.TypeBool},
		{Name: "token", Type: field.TypeString},
		{Name: "client_id", Type: field.TypeString},
		{Name: "demo", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "currency_version_sessions", Type: field.TypeInt, Nullable: true},
		{Name: "game_sessions", Type: field.TypeInt, Nullable: true},
		{Name: "game_version_sessions", Type: field.TypeInt, Nullable: true},
		{Name: "math_version_sessions", Type: field.TypeInt, Nullable: true},
		{Name: "operator_sessions", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_currency_versions_sessions",
				Columns:    []*schema.Column{SessionsColumns[7]},
				RefColumns: []*schema.Column{CurrencyVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_games_sessions",
				Columns:    []*schema.Column{SessionsColumns[8]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_game_versions_sessions",
				Columns:    []*schema.Column{SessionsColumns[9]},
				RefColumns: []*schema.Column{GameVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_math_versions_sessions",
				Columns:    []*schema.Column{SessionsColumns[10]},
				RefColumns: []*schema.Column{MathVersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_operators_sessions",
				Columns:    []*schema.Column{SessionsColumns[11]},
				RefColumns: []*schema.Column{OperatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudiosColumns holds the columns for the "studios" table.
	StudiosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// StudiosTable holds the schema information for the "studios" table.
	StudiosTable = &schema.Table{
		Name:       "studios",
		Columns:    StudiosColumns,
		PrimaryKey: []*schema.Column{StudiosColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CurrenciesTable,
		CurrencyVersionsTable,
		FeaturesTable,
		GamesTable,
		GameConfigsTable,
		GameFeaturesTable,
		GameTypesTable,
		GameVersionsTable,
		MathVersionsTable,
		OperatorsTable,
		PlatformsTable,
		SeriesTable,
		SerieFeaturesTable,
		SessionsTable,
		StudiosTable,
	}
)

func init() {
	CurrencyVersionsTable.ForeignKeys[0].RefTable = CurrenciesTable
	CurrencyVersionsTable.ForeignKeys[1].RefTable = GameTypesTable
	GamesTable.ForeignKeys[0].RefTable = GameTypesTable
	GamesTable.ForeignKeys[1].RefTable = SeriesTable
	GamesTable.ForeignKeys[2].RefTable = StudiosTable
	GameConfigsTable.ForeignKeys[0].RefTable = CurrencyVersionsTable
	GameConfigsTable.ForeignKeys[1].RefTable = GamesTable
	GameConfigsTable.ForeignKeys[2].RefTable = GameVersionsTable
	GameConfigsTable.ForeignKeys[3].RefTable = MathVersionsTable
	GameConfigsTable.ForeignKeys[4].RefTable = OperatorsTable
	GameFeaturesTable.ForeignKeys[0].RefTable = FeaturesTable
	GameFeaturesTable.ForeignKeys[1].RefTable = GamesTable
	GameVersionsTable.ForeignKeys[0].RefTable = GamesTable
	GameVersionsTable.ForeignKeys[1].RefTable = GameTypesTable
	OperatorsTable.ForeignKeys[0].RefTable = PlatformsTable
	SerieFeaturesTable.ForeignKeys[0].RefTable = FeaturesTable
	SerieFeaturesTable.ForeignKeys[1].RefTable = SeriesTable
	SessionsTable.ForeignKeys[0].RefTable = CurrencyVersionsTable
	SessionsTable.ForeignKeys[1].RefTable = GamesTable
	SessionsTable.ForeignKeys[2].RefTable = GameVersionsTable
	SessionsTable.ForeignKeys[3].RefTable = MathVersionsTable
	SessionsTable.ForeignKeys[4].RefTable = OperatorsTable
}
