// Code generated by ent, DO NOT EDIT.

package currencie

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/Lavizord/checkers-server/postgrescli/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldName, v))
}

// Symbol applies equality check predicate on the "symbol" field. It's identical to SymbolEQ.
func Symbol(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldSymbol, v))
}

// ThousandsSeparator applies equality check predicate on the "thousands_separator" field. It's identical to ThousandsSeparatorEQ.
func ThousandsSeparator(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldThousandsSeparator, v))
}

// UnitsSeparator applies equality check predicate on the "units_separator" field. It's identical to UnitsSeparatorEQ.
func UnitsSeparator(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldUnitsSeparator, v))
}

// SymbolPosition applies equality check predicate on the "symbol_position" field. It's identical to SymbolPositionEQ.
func SymbolPosition(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldSymbolPosition, v))
}

// Denominator applies equality check predicate on the "denominator" field. It's identical to DenominatorEQ.
func Denominator(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldDenominator, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContainsFold(FieldName, v))
}

// SymbolEQ applies the EQ predicate on the "symbol" field.
func SymbolEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldSymbol, v))
}

// SymbolNEQ applies the NEQ predicate on the "symbol" field.
func SymbolNEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldSymbol, v))
}

// SymbolIn applies the In predicate on the "symbol" field.
func SymbolIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldSymbol, vs...))
}

// SymbolNotIn applies the NotIn predicate on the "symbol" field.
func SymbolNotIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldSymbol, vs...))
}

// SymbolGT applies the GT predicate on the "symbol" field.
func SymbolGT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldSymbol, v))
}

// SymbolGTE applies the GTE predicate on the "symbol" field.
func SymbolGTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldSymbol, v))
}

// SymbolLT applies the LT predicate on the "symbol" field.
func SymbolLT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldSymbol, v))
}

// SymbolLTE applies the LTE predicate on the "symbol" field.
func SymbolLTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldSymbol, v))
}

// SymbolContains applies the Contains predicate on the "symbol" field.
func SymbolContains(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContains(FieldSymbol, v))
}

// SymbolHasPrefix applies the HasPrefix predicate on the "symbol" field.
func SymbolHasPrefix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasPrefix(FieldSymbol, v))
}

// SymbolHasSuffix applies the HasSuffix predicate on the "symbol" field.
func SymbolHasSuffix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasSuffix(FieldSymbol, v))
}

// SymbolEqualFold applies the EqualFold predicate on the "symbol" field.
func SymbolEqualFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEqualFold(FieldSymbol, v))
}

// SymbolContainsFold applies the ContainsFold predicate on the "symbol" field.
func SymbolContainsFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContainsFold(FieldSymbol, v))
}

// ThousandsSeparatorEQ applies the EQ predicate on the "thousands_separator" field.
func ThousandsSeparatorEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldThousandsSeparator, v))
}

// ThousandsSeparatorNEQ applies the NEQ predicate on the "thousands_separator" field.
func ThousandsSeparatorNEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldThousandsSeparator, v))
}

// ThousandsSeparatorIn applies the In predicate on the "thousands_separator" field.
func ThousandsSeparatorIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldThousandsSeparator, vs...))
}

// ThousandsSeparatorNotIn applies the NotIn predicate on the "thousands_separator" field.
func ThousandsSeparatorNotIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldThousandsSeparator, vs...))
}

// ThousandsSeparatorGT applies the GT predicate on the "thousands_separator" field.
func ThousandsSeparatorGT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldThousandsSeparator, v))
}

// ThousandsSeparatorGTE applies the GTE predicate on the "thousands_separator" field.
func ThousandsSeparatorGTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldThousandsSeparator, v))
}

// ThousandsSeparatorLT applies the LT predicate on the "thousands_separator" field.
func ThousandsSeparatorLT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldThousandsSeparator, v))
}

// ThousandsSeparatorLTE applies the LTE predicate on the "thousands_separator" field.
func ThousandsSeparatorLTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldThousandsSeparator, v))
}

// ThousandsSeparatorContains applies the Contains predicate on the "thousands_separator" field.
func ThousandsSeparatorContains(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContains(FieldThousandsSeparator, v))
}

// ThousandsSeparatorHasPrefix applies the HasPrefix predicate on the "thousands_separator" field.
func ThousandsSeparatorHasPrefix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasPrefix(FieldThousandsSeparator, v))
}

// ThousandsSeparatorHasSuffix applies the HasSuffix predicate on the "thousands_separator" field.
func ThousandsSeparatorHasSuffix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasSuffix(FieldThousandsSeparator, v))
}

// ThousandsSeparatorEqualFold applies the EqualFold predicate on the "thousands_separator" field.
func ThousandsSeparatorEqualFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEqualFold(FieldThousandsSeparator, v))
}

// ThousandsSeparatorContainsFold applies the ContainsFold predicate on the "thousands_separator" field.
func ThousandsSeparatorContainsFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContainsFold(FieldThousandsSeparator, v))
}

// UnitsSeparatorEQ applies the EQ predicate on the "units_separator" field.
func UnitsSeparatorEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldUnitsSeparator, v))
}

// UnitsSeparatorNEQ applies the NEQ predicate on the "units_separator" field.
func UnitsSeparatorNEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldUnitsSeparator, v))
}

// UnitsSeparatorIn applies the In predicate on the "units_separator" field.
func UnitsSeparatorIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldUnitsSeparator, vs...))
}

// UnitsSeparatorNotIn applies the NotIn predicate on the "units_separator" field.
func UnitsSeparatorNotIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldUnitsSeparator, vs...))
}

// UnitsSeparatorGT applies the GT predicate on the "units_separator" field.
func UnitsSeparatorGT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldUnitsSeparator, v))
}

// UnitsSeparatorGTE applies the GTE predicate on the "units_separator" field.
func UnitsSeparatorGTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldUnitsSeparator, v))
}

// UnitsSeparatorLT applies the LT predicate on the "units_separator" field.
func UnitsSeparatorLT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldUnitsSeparator, v))
}

// UnitsSeparatorLTE applies the LTE predicate on the "units_separator" field.
func UnitsSeparatorLTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldUnitsSeparator, v))
}

// UnitsSeparatorContains applies the Contains predicate on the "units_separator" field.
func UnitsSeparatorContains(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContains(FieldUnitsSeparator, v))
}

// UnitsSeparatorHasPrefix applies the HasPrefix predicate on the "units_separator" field.
func UnitsSeparatorHasPrefix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasPrefix(FieldUnitsSeparator, v))
}

// UnitsSeparatorHasSuffix applies the HasSuffix predicate on the "units_separator" field.
func UnitsSeparatorHasSuffix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasSuffix(FieldUnitsSeparator, v))
}

// UnitsSeparatorEqualFold applies the EqualFold predicate on the "units_separator" field.
func UnitsSeparatorEqualFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEqualFold(FieldUnitsSeparator, v))
}

// UnitsSeparatorContainsFold applies the ContainsFold predicate on the "units_separator" field.
func UnitsSeparatorContainsFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContainsFold(FieldUnitsSeparator, v))
}

// SymbolPositionEQ applies the EQ predicate on the "symbol_position" field.
func SymbolPositionEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldSymbolPosition, v))
}

// SymbolPositionNEQ applies the NEQ predicate on the "symbol_position" field.
func SymbolPositionNEQ(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldSymbolPosition, v))
}

// SymbolPositionIn applies the In predicate on the "symbol_position" field.
func SymbolPositionIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldSymbolPosition, vs...))
}

// SymbolPositionNotIn applies the NotIn predicate on the "symbol_position" field.
func SymbolPositionNotIn(vs ...string) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldSymbolPosition, vs...))
}

// SymbolPositionGT applies the GT predicate on the "symbol_position" field.
func SymbolPositionGT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldSymbolPosition, v))
}

// SymbolPositionGTE applies the GTE predicate on the "symbol_position" field.
func SymbolPositionGTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldSymbolPosition, v))
}

// SymbolPositionLT applies the LT predicate on the "symbol_position" field.
func SymbolPositionLT(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldSymbolPosition, v))
}

// SymbolPositionLTE applies the LTE predicate on the "symbol_position" field.
func SymbolPositionLTE(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldSymbolPosition, v))
}

// SymbolPositionContains applies the Contains predicate on the "symbol_position" field.
func SymbolPositionContains(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContains(FieldSymbolPosition, v))
}

// SymbolPositionHasPrefix applies the HasPrefix predicate on the "symbol_position" field.
func SymbolPositionHasPrefix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasPrefix(FieldSymbolPosition, v))
}

// SymbolPositionHasSuffix applies the HasSuffix predicate on the "symbol_position" field.
func SymbolPositionHasSuffix(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldHasSuffix(FieldSymbolPosition, v))
}

// SymbolPositionEqualFold applies the EqualFold predicate on the "symbol_position" field.
func SymbolPositionEqualFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldEqualFold(FieldSymbolPosition, v))
}

// SymbolPositionContainsFold applies the ContainsFold predicate on the "symbol_position" field.
func SymbolPositionContainsFold(v string) predicate.Currencie {
	return predicate.Currencie(sql.FieldContainsFold(FieldSymbolPosition, v))
}

// DenominatorEQ applies the EQ predicate on the "denominator" field.
func DenominatorEQ(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldEQ(FieldDenominator, v))
}

// DenominatorNEQ applies the NEQ predicate on the "denominator" field.
func DenominatorNEQ(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldNEQ(FieldDenominator, v))
}

// DenominatorIn applies the In predicate on the "denominator" field.
func DenominatorIn(vs ...int) predicate.Currencie {
	return predicate.Currencie(sql.FieldIn(FieldDenominator, vs...))
}

// DenominatorNotIn applies the NotIn predicate on the "denominator" field.
func DenominatorNotIn(vs ...int) predicate.Currencie {
	return predicate.Currencie(sql.FieldNotIn(FieldDenominator, vs...))
}

// DenominatorGT applies the GT predicate on the "denominator" field.
func DenominatorGT(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldGT(FieldDenominator, v))
}

// DenominatorGTE applies the GTE predicate on the "denominator" field.
func DenominatorGTE(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldGTE(FieldDenominator, v))
}

// DenominatorLT applies the LT predicate on the "denominator" field.
func DenominatorLT(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldLT(FieldDenominator, v))
}

// DenominatorLTE applies the LTE predicate on the "denominator" field.
func DenominatorLTE(v int) predicate.Currencie {
	return predicate.Currencie(sql.FieldLTE(FieldDenominator, v))
}

// HasCurrencyVersions applies the HasEdge predicate on the "currency_versions" edge.
func HasCurrencyVersions() predicate.Currencie {
	return predicate.Currencie(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CurrencyVersionsTable, CurrencyVersionsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCurrencyVersionsWith applies the HasEdge predicate on the "currency_versions" edge with a given conditions (other predicates).
func HasCurrencyVersionsWith(preds ...predicate.CurrencyVersion) predicate.Currencie {
	return predicate.Currencie(func(s *sql.Selector) {
		step := newCurrencyVersionsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Currencie) predicate.Currencie {
	return predicate.Currencie(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Currencie) predicate.Currencie {
	return predicate.Currencie(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Currencie) predicate.Currencie {
	return predicate.Currencie(sql.NotPredicates(p))
}
